package tech.fastj.input.mouse;

import tech.fastj.gameloop.event.EventObserver;
import tech.fastj.input.InputManager;
import tech.fastj.input.mouse.events.MouseActionEvent;
import tech.fastj.input.mouse.events.MouseButtonEvent;
import tech.fastj.input.mouse.events.MouseMotionEvent;
import tech.fastj.input.mouse.events.MouseScrollEvent;
import tech.fastj.input.mouse.events.MouseWindowEvent;

import java.awt.event.MouseListener;

/**
 * A mouse action listener which listens to and receives {@link MouseActionEvent mouse action events}.
 * <p>
 * Useful information:
 * <ul>
 *     <li>{@link InputManager#addMouseActionListener(MouseActionListener) Adding mouse listeners to a game}</li>
 * </ul>
 * <b>For re-implementors of the mouse events system</b>: If you are planning to implement this class into a usage separate from FastJ's
 * {@link Mouse}, you may consider using the {@link InputManager} class which stores a list of mouse action listeners. Then, have events
 * from a class extending {@link MouseListener AWT's MouseListener} which fires {@link MouseActionEvent mouse events} to that
 * {@link InputManager input manager}.
 *
 * @author Andrew Dey
 * @since 1.7.0
 */
public interface MouseActionListener extends EventObserver<MouseActionEvent> {

    /**
     * Event called when a mouse button is pressed.
     *
     * @param mouseButtonEvent The mouse event generated by the recent mouse button press.
     */
    default void onMousePressed(MouseButtonEvent mouseButtonEvent) {
    }

    /**
     * Event called when a mouse button is released.
     *
     * @param mouseButtonEvent The mouse event generated by the recent mouse button released.
     */
    default void onMouseReleased(MouseButtonEvent mouseButtonEvent) {
    }

    /**
     * Event called when a mouse button is clicked.
     *
     * @param mouseButtonEvent The mouse event generated by the recent mouse button click.
     */
    default void onMouseClicked(MouseButtonEvent mouseButtonEvent) {
    }

    /**
     * Event called when the mouse is moved.
     *
     * @param mouseMotionEvent The mouse event generated by the recent mouse moved.
     */
    default void onMouseMoved(MouseMotionEvent mouseMotionEvent) {
    }

    /**
     * Event called when the mouse is dragged.
     *
     * @param mouseMotionEvent The mouse event generated by the recent mouse dragged.
     */
    default void onMouseDragged(MouseMotionEvent mouseMotionEvent) {
    }

    /**
     * Event called when the mouse wheel is scrolled.
     *
     * @param mouseScrollEvent The mouse event generated by the recent mouse wheel scroll.
     */
    default void onMouseWheelScrolled(MouseScrollEvent mouseScrollEvent) {
    }

    /**
     * Event called when the mouse enters the application screen.
     *
     * @param mouseWindowEvent The mouse event generated by the mouse entering the screen.
     */
    default void onMouseEntersScreen(MouseWindowEvent mouseWindowEvent) {
    }

    /**
     * Event called when the mouse exits the application screen.
     *
     * @param mouseWindowEvent The mouse event generated by the mouse exiting the screen.
     */
    default void onMouseExitsScreen(MouseWindowEvent mouseWindowEvent) {
    }

    @Override
    default void eventReceived(MouseActionEvent mouseActionEvent) {
        if (mouseActionEvent.isConsumed()) {
            return;
        }

        switch (mouseActionEvent.getEventType()) {
            case Press -> onMousePressed((MouseButtonEvent) mouseActionEvent);
            case Release -> onMouseReleased((MouseButtonEvent) mouseActionEvent);
            case Click -> onMouseClicked((MouseButtonEvent) mouseActionEvent);
            case Move -> onMouseMoved((MouseMotionEvent) mouseActionEvent);
            case Drag -> onMouseDragged((MouseMotionEvent) mouseActionEvent);
            case WheelScroll -> onMouseWheelScrolled((MouseScrollEvent) mouseActionEvent);
            case Enter -> onMouseEntersScreen((MouseWindowEvent) mouseActionEvent);
            case Exit -> onMouseExitsScreen((MouseWindowEvent) mouseActionEvent);
        }
    }
}
